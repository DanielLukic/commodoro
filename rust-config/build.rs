use std::env;
use std::path::PathBuf;

fn main() {
    let crate_dir = env::var("CARGO_MANIFEST_DIR").unwrap();
    let out_dir = PathBuf::from(&crate_dir).parent().unwrap().join("include");
    
    // Create include directory if it doesn't exist
    std::fs::create_dir_all(&out_dir).unwrap();
    
    cbindgen::Builder::new()
        .with_crate(crate_dir)
        .with_language(cbindgen::Language::C)
        .with_include_guard("COMMODORO_CONFIG_H")
        .with_autogen_warning("/* This file is auto-generated by cbindgen. Do not edit manually. */")
        .with_sys_include("stdint.h")
        .with_sys_include("stdbool.h")
        .generate()
        .expect("Unable to generate bindings")
        .write_to_file(out_dir.join("commodoro_config.h"));
}