/* Generated by cbindgen - DO NOT EDIT */

#ifndef SETTINGS_DIALOG_RUST_H
#define SETTINGS_DIALOG_RUST_H

/* WARNING: this file is generated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

typedef struct Option_SettingsDialogCallback Option_SettingsDialogCallback;

typedef struct SettingsDialog SettingsDialog;

typedef struct Settings {
  int work_duration;
  int short_break_duration;
  int long_break_duration;
  int sessions_until_long_break;
  bool auto_start_work_after_break;
  bool enable_idle_detection;
  int idle_timeout_minutes;
  bool enable_sounds;
  double sound_volume;
  char *sound_type;
  char *work_start_sound;
  char *break_start_sound;
  char *session_complete_sound;
  char *timer_finish_sound;
} Settings;

extern struct Settings *settings_new_default(void);

extern void settings_free(struct Settings *settings);

extern void settings_set_sound_type(struct Settings *settings, const char *sound_type);

extern void settings_set_work_start_sound(struct Settings *settings, const char *path);

extern void settings_set_break_start_sound(struct Settings *settings, const char *path);

struct SettingsDialog *settings_dialog_new(GtkWindow *parent,
                                           const struct Settings *settings,
                                           void *_audio);

void settings_dialog_free(struct SettingsDialog *dialog);

void settings_dialog_set_callback(struct SettingsDialog *dialog,
                                  struct Option_SettingsDialogCallback callback,
                                  void *user_data);

void settings_dialog_show(struct SettingsDialog *dialog);

struct Settings *settings_dialog_get_settings(struct SettingsDialog *dialog);

void settings_dialog_restore_defaults(struct SettingsDialog *dialog);

#endif /* SETTINGS_DIALOG_RUST_H */
